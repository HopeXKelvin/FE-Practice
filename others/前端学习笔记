2015-10-09
------jQuery脚本的结构------
jQuery的核心函数，通常是指一个工厂对象，即jQuery()函数，或者更为常用的别名$()函数。

------jq的工具函数-------
jq对象具有一些非常有用的方法，简称为工具方法。工具方法可以增强对于数组，对象，函数甚至数据的操作。
--1.对象
	$.type()
	$.isEmptyObject()
	$.extend()
--2.函数
	$.isFunction()
	$.noop()
--3.数组操作
	$.isArray()
	$.makeArray()
	$.merge()
	$.inArray()
	$.unique()
--4.数据结构
	
--5字符串
	$.trim()
--6.数据
	ajax


2015-10-10
--------选择和操作DOM元素---------
选择元素的语法：
$(selector,[context])
jQuery(selector,[context])
有的时候 我们可能只想搜索DOM的一个子树，要实现这样的功能，可以向jQuery()函数传入第2个参数，为搜索指定一个上下文。

后代选择器：$("ancestor descendant")
属性选择器：$("[attributeName='string2match']")
一些属性选择器采用了正则表达式的表示法，可以匹配字符串中的一部分，例如匹配属性的开头，或者匹配属性的结尾。
例如：$("[attributeName^='value']")//匹配属性开头
      $("[attributeName$='value']")//匹配属性结尾

--关于jQuery新的事件绑定机制on()的使用--
从jq1.7开始，jQuery引入了全新的事件绑定机制，on()和off()两个函数统一处理事件绑定。
live()已经不能在用了，最新的jq版本里面用on()方法代替live()
以前 live()写法：
$("#list li").live("click",function(){
	//function code here
});

新的 on()写法：
$(document).on("click","#list li",function(){
	//functin code here
});


替换delegate()

以前 delegate()写法：
$("#list").delegate("li","click",function(){
	//function code here
});

现在 on()写法：
$("#list").on("click","li",function(){
	//function code here
});
这两个就是参数调换了以下位置，其他基本没什么变化.

jQuery推出on()的目的有2个，一是为了统一接口，二是为了提高性能，所以从现在开始用on()替换bind(),live(),delegate().

--Ajax基础--
现在的Ajax指的是在客户端与服务器之间采用异步通信方式，使用javascript创建交互式web和动态应用程序的一种开发方法。
Ajax技术的核心是XMLHttpRequest对象

2015-10-11
------关于ubuntu下搭载php开发环境的一些配置问题------
在ubuntu下搭载好了 apache2的服务器，要进行一些自定义配置
首先要做的是改变apache2的默认目录到当前的开发目录：
---方法1
	apache2的默认目录配置在/etc/apache2/sites-enabled/000-default 文件中
	找到该文件中的DocumentRoot一项，将/var/www 改成自己的开发目录就可以了。
---方法2
	这种方法不需要改变默认目录配置，只需要在/var/www下建立一个到自己目录的链接.
	假设自己的开发目录是 /home/kelvin/dev/web 那么只需要输入以下面命令：
	sudo ln -s /home/kelvin/dev/web /var/www/web
	这样就可以通过http://localhost/web 访问自己的开发目录了.
****以上非常重要*****

-----关于 打开，关闭，重启 apache2的命令------
打开： sudo /etc/init.d/apache2 start
关闭： sudo /etc/init.d/apache2 stop
重启： sudo /etc/init.d/apache2 restart

---jQuery具有一个极为有用的方法：$.load() 它的功能是发起Ajax请求，并将返回的HTML片段加载到匹配的元素中.所有这些功能都在一次方法调用中实现.
该方法的语法如下：
$(selector).load(url,[data],[success(response,status,XHR)])
$.load()方法接受3个参数：第一个参数是一个目标url,第二个参数是一个可选的数据对象，第三个参数是一个可选的success函数,该函数本身又接收一个响应字符串，一个状态字符串和一个XMLHttpRequest对象.

-----使用Ajax加载HTML------
基准代码如下：
var xhr=new XMLHttpRequest();//创建XMLHttpRequest 对象
xhr.onload=function(){
	if(xhr.status===200){	//检测连接状态，200为连接就绪
		console.log("Server status is ok!");
		document.getElementById("content").innerHTML=xhr.responseText;//加载html内容
	}
};
xhr.open("GET","test2.html",true);//准备请求
xhr.send(null);//发送请求.

-----关于 Ajax加载JSON数据-----
将JSON格式的数据转换成Javascript对象，叫做对象反序列化
用 json对象的 parse()方法完成
将对象转换为JSON表示格式的字符串，叫做对象的序列化
用 json对象的 stringify()方法完成.

------Ajax 跨域请求-------
一般有三种方法：
--1.web服务器上的代理文件
--2.JSONP(JSON with Padding)
--3.跨来源资源共享

2015-10-12
-------PHP部分的学习--------
--$符号
在PHP中必须将$符号放在所有变量之前，这使得PHP语言解析速度更快，因为解析器只要碰见这个符号就会立即知道接下来的是一个变量.

PHP是一种松散型语言，这意味着变量在使用之前不用被声明.
关于PHP的常量，必须记住两件事：
1.它们之前不能有$符号
2.只能用define函数定义它们
示例：
define("ROOT_LOCATION","/usr/local/www/");//定义常量
$directory=ROOT_LOCATION;//使用常量

PHP变量的作用域：
1.局部变量
局部变量是在函数内创建且只能在一个函数内被访问的变量，总的来说它们是临时变量，用来存储在函数返回之前部分被处理过的结果.
在函数中创建的变量对于函数来说是局部变量，在函数外创建的变量对于函数来说只能被非函数的代码访问.
2.全局变量
要将一个变量声明为全局变量，可以利用关键字global.
global $is_logged_in;
应该谨慎使用全局变量，建议只在绝对无法找到任何获取所期望结果的方法时才使用.总的来说，分割成很多小块并将数据分离的程序bug很少且易于维护.
3.静态变量
如果在函数内部有一个局部变量，不想让其他任何代码访问它，反想函数下次再被调用是该变量仍保存着它的值，就可以使用静态变量了.
static $count=0;

----PHP包含和请求文件-----
include , include_once
require , requier_once

2015-10-13
------mysql入门-----
--创建数据库
CREATE DATABASE databasename;

--创建用户
GRANT ALL ON database.* TO 'kelvin'@'localhost' IDENTIFIED BY 'password';
然后可以通过设置的用户的用户名和密码 进入相应的数据库.

2015-10-14
------PHP连接Mysql--------
不论编写的PHP脚本多么简单或多么高深，要与数据交互，则必须有以下几个步骤：
1.连接到一个已安装好的Mysql.
2.使用正确的Mysql数据库
3.发送SQL语句到数据库
4.获取查询返回结果
5.进一步处理结果
根据程序用途，步骤3，4，5需要做相应的改动.


2015-10-15
--------mysql--------
mysql的事务:
关键词:
BEGIN:事务开始
COMMIT:提交事务
ROLLBACK:回退事务
EXPLAIN:使用这个关键字可以得到任何查询快照.

----备份和恢复-----
--备份
使用mysqldump命令，可以将数据库或数据库集合转储到一个或多个文件，这些文件中包含所有重新创建表的指令和重新填充它们的数据.
它也可以生成CSV文件和其他带分隔符的文本格式,甚至是XML格式.
它的主要缺点是，必须确保在备份时没有人向表内写入任何数据.做到这一点的方法很多，最简单的一种是使用mysqldump命令之前先关闭mysql服务器,在mysqldump命令完成后重新启动服务.
另外一种方法是在运行mysqldump命令之前锁定将要备份的表,为将表锁定为只读,可以输入下面命令:
LOCK TABLES tablename1 READ,tablename2 READ.....
然后，输入下面内容释放锁定:
UNLOCK TABLES;

使用mysqldump命令，必须确保mysqldump在当前的路径下.
ubuntu 下用命令:whereis mysqldump 找到mysqldump 然后到此路径下使用该mysql命令.

--恢复
要从文件中执行恢复操作,需调用可执行文件mysql,通过它，该文件使用<符号得以恢复.
示例:恢复一个完整的数据库集
mysql -u user -ppassword < all_databases.sql
示例:恢复publications数据库
mysql -u user -ppassword -D publications < publications.sql
示例:恢复publications数据库中的classics表
mysql -u user -ppassword -D publications < classics.sql
此处只将classics表恢复到publications数据库中.


2015-10-16
--关于php 中的 <<<_END和 _END使用要注意的地方:
以<<<End开始标记开始，以End结束标记结束，结束标记必须顶头写，不能有缩进和空格，且在结束标记末尾要有分号.

2015-10-24
MDN>Web技术文档>JavaScript>JavaScript指南>语法和数据类型

--用var或let声明时未赋初值的变量,值会被设定为undefined.
--你可以使用undefined来确定变量是否已赋值
--undefined值在布尔类型环境中会被当作false
--undefined值在数值类型环境中会被转换为NaN
--当对一个空变量求值时,空值null在数值类型环境中会被当作0来对待.而在布尔类型环境中会被当作false.

--数据类型的转换：
---1.在包含加法运算符的数字和字符串表达式中,JavaScript会把数字值转换为字符串.在包含其他运算符时,JavaScript不会把数字变为字符.
--2. 字符串转换为数字:parseInt(),parseFloat().将字符串转换为数字的另一种方法是使用单目加法运算符.

2015-10-26
MDN>Web技术文档>JavaScript>JavaScript指南>函数
--闭包
闭包是js中最强大的特性之一。js允许函数嵌套，并且内部函数可以访问定义在外部函数中的所有变量和函数，以及外部函数能访问的所有变量和函数。但是，外部函数却不能够访问定义在内部函数中的变量和函数。这给内部函数的变量提供了一定的安全性。而且，当内部函数生存周期大于外部函数时，由于内部函数可以访问外部函数的作用域，定义在外部函数的变量和函数的生存周期就会大于外部函数本身。当内部函数以某一种方式被任何一个外部函数作用域访问时，一个闭包就产生了。


--map 和 对象 object
Object and Map compared
These two tips can help you to decide whether to use a Map or an object:
*Use maps over objects when keys are unknown until run time,and when all keys are the same type and all values are the same type.
*Use objects when there is logic that opertaes on individual elements. 

--js是基于原型的语言
基于原型的语言冰不存在类和实例的区别，它只有对象，基于原型的语言具有所谓原型对象(prototypical object) 的概念。原型对象可以作为一个模板，新对象可以从中获得原型的属性。任何对象都可以指定其自身的属性，既可以是创建时也可以在运行时创建，而且，任何对象都可以作为另一个对象的原型(prototype),从而允许后者共享前者的属性.

--子类和继承
js通过将构造器函数与原型对象相关联的方式来实现继承，这样，你可以创建完全一样的Employee-Manager示例，不过需要使用略微不同的术语。首先，定义Employee构造器函数，指定name和dept属性；然后，定义Manager构造器函数，指定reports属性。最后，将一个新的Employee对象赋值给Manager构造器函数的prototype属性。这样，当创建一个Manager对象时，它将从Employee对象中继承name 和 dept属性.


