2015-10-09
------jQuery脚本的结构------
jQuery的核心函数，通常是指一个工厂对象，即jQuery()函数，或者更为常用的别名$()函数。

------jq的工具函数-------
jq对象具有一些非常有用的方法，简称为工具方法。工具方法可以增强对于数组，对象，函数甚至数据的操作。
--1.对象
	$.type()
	$.isEmptyObject()
	$.extend()
--2.函数
	$.isFunction()
	$.noop()
--3.数组操作
	$.isArray()
	$.makeArray()
	$.merge()
	$.inArray()
	$.unique()
--4.数据结构
	
--5字符串
	$.trim()
--6.数据
	ajax


2015-10-10
--------选择和操作DOM元素---------
选择元素的语法：
$(selector,[context])
jQuery(selector,[context])
有的时候 我们可能只想搜索DOM的一个子树，要实现这样的功能，可以向jQuery()函数传入第2个参数，为搜索指定一个上下文。

后代选择器：$("ancestor descendant")
属性选择器：$("[attributeName='string2match']")
一些属性选择器采用了正则表达式的表示法，可以匹配字符串中的一部分，例如匹配属性的开头，或者匹配属性的结尾。
例如：$("[attributeName^='value']")//匹配属性开头
      $("[attributeName$='value']")//匹配属性结尾

--关于jQuery新的事件绑定机制on()的使用--
从jq1.7开始，jQuery引入了全新的事件绑定机制，on()和off()两个函数统一处理事件绑定。
live()已经不能在用了，最新的jq版本里面用on()方法代替live()
以前 live()写法：
$("#list li").live("click",function(){
	//function code here
});

新的 on()写法：
$(document).on("click","#list li",function(){
	//functin code here
});


替换delegate()

以前 delegate()写法：
$("#list").delegate("li","click",function(){
	//function code here
});

现在 on()写法：
$("#list").on("click","li",function(){
	//function code here
});
这两个就是参数调换了以下位置，其他基本没什么变化.

jQuery推出on()的目的有2个，一是为了统一接口，二是为了提高性能，所以从现在开始用on()替换bind(),live(),delegate().

--Ajax基础--
现在的Ajax指的是在客户端与服务器之间采用异步通信方式，使用javascript创建交互式web和动态应用程序的一种开发方法。
Ajax技术的核心是XMLHttpRequest对象

2015-10-11
------关于ubuntu下搭载php开发环境的一些配置问题------
在ubuntu下搭载好了 apache2的服务器，要进行一些自定义配置
首先要做的是改变apache2的默认目录到当前的开发目录：
---方法1
	apache2的默认目录配置在/etc/apache2/sites-enabled/000-default 文件中
	找到该文件中的DocumentRoot一项，将/var/www 改成自己的开发目录就可以了。
---方法2
	这种方法不需要改变默认目录配置，只需要在/var/www下建立一个到自己目录的链接.
	假设自己的开发目录是 /home/kelvin/dev/web 那么只需要输入以下面命令：
	sudo ln -s /home/kelvin/dev/web /var/www/web
	这样就可以通过http://localhost/web 访问自己的开发目录了.
****以上非常重要*****

-----关于 打开，关闭，重启 apache2的命令------
打开： sudo /etc/init.d/apache2 start
关闭： sudo /etc/init.d/apache2 stop
重启： sudo /etc/init.d/apache2 restart

---jQuery具有一个极为有用的方法：$.load() 它的功能是发起Ajax请求，并将返回的HTML片段加载到匹配的元素中.所有这些功能都在一次方法调用中实现.
该方法的语法如下：
$(selector).load(url,[data],[success(response,status,XHR)])
$.load()方法接受3个参数：第一个参数是一个目标url,第二个参数是一个可选的数据对象，第三个参数是一个可选的success函数,该函数本身又接收一个响应字符串，一个状态字符串和一个XMLHttpRequest对象.

-----使用Ajax加载HTML------
基准代码如下：
var xhr=new XMLHttpRequest();//创建XMLHttpRequest 对象
xhr.onload=function(){
	if(xhr.status===200){	//检测连接状态，200为连接就绪
		console.log("Server status is ok!");
		document.getElementById("content").innerHTML=xhr.responseText;//加载html内容
	}
};
xhr.open("GET","test2.html",true);//准备请求
xhr.send(null);//发送请求.

-----关于 Ajax加载JSON数据-----
将JSON格式的数据转换成Javascript对象，叫做对象反序列化
用 json对象的 parse()方法完成
将对象转换为JSON表示格式的字符串，叫做对象的序列化
用 json对象的 stringify()方法完成.

------Ajax 跨域请求-------
一般有三种方法：
--1.web服务器上的代理文件
--2.JSONP(JSON with Padding)
--3.跨来源资源共享

